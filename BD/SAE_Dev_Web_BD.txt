SAE « Conception d’une BD pour le festival Nancy Rock Vibration »

HAUTION Ilan
BLONBOU Mathys
CHAILAN Cyprian
LOUNICI Ilyes

Sujet BD

Question 1 : 

Nous décrivons ici les entités principales et leurs attributs :

PK = PrimaryKey (clé primaire)
FK = Foreign Key (clé étrangère)

1. Lieu
   * nom_lieu (VARCHAR, PK) : Nom du lieu de spectacle.
   * adresse (VARCHAR) : Adresse du lieu.
   * places_assises (INT) : Nombre de places assises disponibles.
   * places_debout (INT) : Nombre de places debout disponibles.
   * images_lieu (VARCHAR, array) : URLs des images associées au lieu.

2. Soiree
   * id_soiree (INT, PK) : Identifiant unique de la soirée.
   * nom_soiree (VARCHAR) : Nom de la soirée.
   * thematique (VARCHAR) : Thématique générale de la soirée.
   * date_soiree (DATE) : Date de la soirée.
   * heure_debut (TIME) : Heure de début de la soirée.
   * lieu (nom_lieu, FK) : Lieu où se déroule la soirée.

3. Spectacle
   * id_spectacle (INT, PK) : Identifiant unique du spectacle.
   * titre (VARCHAR) : Titre du spectacle.
   * description (TEXT) : Description du spectacle.
   * video_url (VARCHAR) : URL vers une vidéo du spectacle.
   * horaire_previsionnel (TIME) : Heure prévisionnelle de début du spectacle.
   * id_soiree(INT FK) :  Identifiant de la soirée

4. Artiste
   * id_artiste(INT PK) : Identifiant unique de l'artiste
   * nom_artiste (VARCHAR) : Nom de l'artiste
   * bio (TEXT) : Nom de l'artiste

5. SpectacleArtiste
   * id_spectacle (INT PK FK) : Identifiant du spectacle
   * id_artiste (INT PK FK) : Identifiant de l'artiste

6. ImageLieu
   * url (VARCHAR PK) : URL de l'image
   * nom_image (VARCHAR) : Nom ou description de l'image
   * nom_lieu (VARCHAR FK) : Lieu associé à l'image

7. ImageSpectacle
   * url (VARCHAR PK) : URL de l'image
   * nom_image (VARCHAR) : Nom ou description de l'image
   * id_spectacle(INT FK) : Identifiant du spectacle associé


Question 2 et 3 :


1. Lieu
* Dépendances fonctionnelles :
   * nom_lieu → adresse, places_assises, places_debout
* Clé minimale : nom_lieu
* Justification : Le nom du lieu identifie de manière unique chaque enregistrement et détermine ses autres attributs comme l’adresse, les places assises et debout. Les images seront stockées dans la table ImageLieu associée.


2. Soiree
* Dépendances fonctionnelles :
   * id_soiree → nom_soiree, thematique, date, heure_debut, lieu
* Clé minimale : id_soiree
* Justification : L’identifiant unique id_soiree permet d’identifier chaque soirée sans ambiguïté et de déterminer ses autres caractéristiques telles que le nom, la thématique, la date, l’heure de début et le lieu associé.


3. Spectacle
* Dépendances fonctionnelles :
   * id_spectacle → titre, description, video_url, horaire_previsionnel, id_soiree
* Clé minimale : id_spectacle
* Justification : L’identifiant id_spectacle permet de reconnaître chaque spectacle et de déduire ses informations telles que le titre, la description, l’URL vidéo, l’horaire prévisionnel et la soirée à laquelle il est associé. Les images des spectacles sont externalisées dans la table ImageSpectacle et les artistes associés dans SpectacleArtiste.


4. Artiste
* Dépendances fonctionnelles :
   * id_artiste → nom_artiste, bio
* Clé minimale : id_artiste
* Justification : id_artiste identifie chaque artiste de manière unique, permettant d'accéder aux informations comme le nom et la biographie.


5. SpectacleArtiste
* Dépendances fonctionnelles :
   * (id_spectacle, id_artiste) → Association unique d’un artiste avec un spectacle.
* Clé minimale : (id_spectacle, id_artiste) (clé composite)
* Justification : La combinaison id_spectacle et id_artiste est unique et permet de gérer les associations sans redondance. Un artiste peut participer à plusieurs spectacles, et chaque spectacle peut inclure plusieurs artistes.


6. ImageLieu
* Dépendances fonctionnelles :
   * url → nom_image, nom_lieu
* Clé minimale : url
* Justification : L’URL de chaque image est unique et permet de référencer les détails de l’image et son lieu associé.


7. ImageSpectacle
* Dépendances fonctionnelles :
   * url → nom_image, id_spectacle
* Clé minimale : url
* Justification : L’URL de chaque image est unique et permet de référencer les détails de l’image et le spectacle auquel elle est associée.


Question 4 et 5
Pour être en 3NF, chaque relation doit être en 2NF et ne contenir aucune dépendance transitive (c'est-à-dire qu'aucun attribut ne doit dépendre indirectement de la clé primaire).


1. Table Lieu
Attributs : nom_lieu, adresse, places_assises, places_debout 
1NF :
* Les attributs sont atomiques, donc la table est en 1NF.
2NF :
* La clé primaire nom_lieu détermine chaque autre attribut (adresse, places_assises, places_debout) sans dépendances partielles. Donc, la table est en 2NF.
3NF :
* Aucun attribut ne dépend indirectement de la clé primaire. La table Lieu est donc en 3NF.


2. Table Soiree
Attributs : id_soiree, nom_soiree, thematique, date, heure_debut, lieu 
1NF :
* Tous les attributs sont atomiques, donc la table est en 1NF.
2NF :
* La clé primaire id_soiree détermine chaque autre attribut sans dépendance partielle. Elle est donc en 2NF.
3NF :
* Aucune dépendance transitive n'existe. La table Soiree est en 3NF.


3. Table Spectacle
Attributs : id_spectacle, titre, description, video_url, horaire_previsionnel, id_soiree 
1NF :
* Les champs sont atomiques. Les images sont déplacées dans une table externe ImageSpectacle et les artistes dans SpectacleArtiste, donc elle respecte la 1NF.
2NF :
* id_spectacle détermine chaque autre attribut, sans dépendance partielle. La table est en 2NF.
3NF :
* Aucune dépendance transitive. La table Spectacle est en 3NF.


4. Table Artiste
Attributs : id_artiste, nom_artiste, bio 
1NF :
* Les attributs sont atomiques et indépendants.
2NF :
* id_artiste détermine les autres attributs, sans dépendance partielle.
3NF :
* Aucune dépendance transitive. La table Artiste est donc en 3NF.


5. Table SpectacleArtiste
Attributs : id_spectacle, id_artiste 
1NF :
* Les attributs sont atomiques.
2NF :
* La clé primaire composite (id_spectacle, id_artiste) détermine chaque ligne unique, donc la table est en 2NF.
3NF :
* Pas de dépendance transitive. La table SpectacleArtiste est en 3NF.


6. Table ImageLieu
Attributs : url, nom_image, nom_lieu 
1NF :
* Les attributs sont atomiques.
2NF :
* La clé primaire url détermine les autres attributs, donc la table est en 2NF.
3NF :
* Pas de dépendances transitives. La table ImageLieu est en 3NF.


7. Table ImageSpectacle
Attributs : url, nom_image, id_spectacle 
1NF :
* Les attributs sont atomiques.
2NF :
* La clé primaire url détermine chaque autre attribut sans dépendance partielle.
3NF :
* Pas de dépendance transitive. La table ImageSpectacle est en 3NF.




Question 6 :
Voici le script SQL pour créer les tables, avec quelques exemples d'enregistrements :
--Création des tables
CREATE TABLE Lieu (
        nom_lieu VARCHAR(255) PRIMARY KEY,
        adresse VARCHAR(255),
        places_assises INT,
        places_debout INT,
        description TEXT
);


CREATE TABLE Soiree (
        id_soiree INT PRIMARY KEY AUTO_INCREMENT,
        nom_soiree VARCHAR(255),
        thematique VARCHAR(255),
        date_soiree DATE,
        horaire_debut TIME,
        nom_lieu VARCHAR(255),
        FOREIGN KEY (nom_lieu) REFERENCES Lieu(nom_lieu)
);


CREATE TABLE Spectacle (
        id_spectacle INT PRIMARY KEY AUTO_INCREMENT,
        titre VARCHAR(255),
        description TEXT,
        video_url VARCHAR(255),
        horaire_previsionnel TIME,
        id_soiree INT,
        FOREIGN KEY (id_soiree) REFERENCES Soiree(id_soiree)
);


CREATE TABLE Artiste (
        id_artiste INT PRIMARY KEY AUTO_INCREMENT,
        nom_artiste VARCHAR(255),
        bio TEXT
);


CREATE TABLE SpectacleArtiste (
        id_spectacle INT,
        id_artiste INT,
        PRIMARY KEY (id_spectacle, id_artiste),
        FOREIGN KEY (id_spectacle) REFERENCES Spectacle(id_spectacle),
        FOREIGN KEY (id_artiste) REFERENCES Artiste(id_artiste)
);


CREATE TABLE ImageLieu (
        url VARCHAR(255) PRIMARY KEY,
        nom_image VARCHAR(255),
        nom_lieu VARCHAR(255),
        FOREIGN KEY (nom_lieu) REFERENCES Lieu(nom_lieu)
);


CREATE TABLE ImageSpectacle (
        url VARCHAR(255) PRIMARY KEY,
        nom_image VARCHAR(255),
        id_spectacle INT,
        FOREIGN KEY (id_spectacle) REFERENCES Spectacle(id_spectacle)
);


-- Test des tables avec des INSERT INTO quelconque
INSERT INTO Lieu VALUES
        ('NRV FESTIVALE CLASSIQUE', '123 Rue de Paris, 54000 NANCY', 500, 200, 'La classe en un endroit classique'),
        ('NRV FESTIVALE JAZZ', '45 Avenue des Champs, 54000 NANCY', 300, 150, 'La classe en un endroit jazz');


INSERT INTO Soiree VALUES
        (1, 'Soirée Classique', 'Classique', '2023-12-10', '19:00:00', 'NRV FESTIVALE CLASSIQUE'),
        (2, 'Soirée Jazz', 'Jazz', '2023-12-15', '20:00:00', 'NRV FESTIVALE JAZZ');


INSERT INTO Spectacle VALUES
        (1, 'Symphonie No.9', 'Performance de la 9ème symphonie de Beethoven', 'http://example.com/video1', '19:30:00', 1),
        (2, 'Jazz Night', 'Une soirée de jazz inoubliable', 'http://example.com/video2', '20:30:00', 2);
    
INSERT INTO Artiste VALUES
        (1, 'Ludwig van Beethoven', 'Compositeur allemand célèbre pour ses symphonies'),
        (2, 'Miles Davis', 'Pionnier du jazz et trompettiste de renommée mondiale'),
        (3, 'JUL', 'Plus grand artiste que cette planète est connu');


INSERT INTO SpectacleArtiste VALUES
        (1, 1),
        (2, 2),
        (2, 3);
    
INSERT INTO ImageLieu VALUES
        ('http://example.com/NRV_FESTIVALE_CLASSIQUE.jpg', 'NRV FESTIVALE CLASSIQUE Image', 'NRV FESTIVALE CLASSIQUE'),
        ('http://example.com/NRV_FESTIVALE_JAZZ.jpg', 'NRV FESTIVALE JAZZ Image', 'NRV FESTIVALE JAZZ');
    
INSERT INTO ImageSpectacle VALUES
        ('http://example.com/symphonie_image.jpg', 'Symphonie No.9 Image', 1),
        ('http://example.com/jazznight_image.jpg', 'Jazz Night Image', 2);


–- Suppression des tables si besoin
DROP TABLE spectacleartiste;
DROP TABLE ARTISTE;
DROP TABLE imagelieu;
DROP TABLE imagespectacle;
DROP TABLE spectacle;
DROP TABLE soiree;
DROP TABLE lieu;