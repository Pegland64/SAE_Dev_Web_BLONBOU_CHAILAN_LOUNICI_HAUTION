SAE « Conception d’une BD pour le festival Nancy Rock Vibration »

HAUTION Ilan
BLONBOU Mathys
CHAILAN Cyprian
LOUNICI Ilyes

Sujet BD

Question 1 : 
Nous décrivons ici les entités principales et leurs attributs :

PK = PrimaryKey (clé primaire)
FK = Foreign Key (clé étrangère)

Lieu
nom_lieu (VARCHAR, PK) : Nom du lieu de spectacle.
adresse (VARCHAR) : Adresse du lieu.
places_assises (INT) : Nombre de places assises disponibles.
places_debout (INT) : Nombre de places debout disponibles.
images_lieu (VARCHAR, array) : URLs des images associées au lieu.

Soiree
id_soiree (INT, PK) : Identifiant unique de la soirée.
nom_soiree (VARCHAR) : Nom de la soirée.
thematique (VARCHAR) : Thématique générale de la soirée (ex. rock, jazz,...).
date_soiree (DATE) : Date de la soirée.
heure_debut (TIME) : Heure de début de la soirée.
heure_fin (TIME) : Heure de fin de la soirée
lieu (nom_lieu, FK) : Lieu où se déroule la soirée.

Spectacle
id_spectacle (INT, PK) : Identifiant unique du spectacle.
titre (VARCHAR) : Titre du spectacle.
description (TEXT) : Description du spectacle.
video_url (VARCHAR) : URL vers une vidéo du spectacle.
horaire_debut_previsionnel (TIME) : Heure prévisionnelle de début du spectacle.
horaire_fin_prévisionnel (TIME) : heure prévisionnelle de fin de spectacle.
style (VARCHAR) : style du spectacle (ex. hardrock, rock alternatif,...).
id_soiree(INT FK) :  Identifiant de la soirée
Etat (VARCHAR) : Etat du spectacle (annulé ou non)

Artiste
id_artiste(INT PK) : Identifiant unique de l'artiste
nom_artiste (VARCHAR) : Nom de l'artiste
bio (TEXT) : Nom de l'artiste

Participe
id_spectacle (INT PK FK) : Identifiant du spectacle
id_artiste (INT PK FK) : Identifiant de l'artiste

ImageLieu
url (VARCHAR PK) : URL de l'image
nom_image (VARCHAR) : Nom ou description de l'image
nom_lieu (VARCHAR FK) : Lieu associé à l'image

ImageSpectacle
url (VARCHAR PK) : URL de l'image
nom_image (VARCHAR) : Nom ou description de l'image
id_spectacle(INT FK) : Identifiant du spectacle associé

Users
id_user (INT PK) : identifiant de l’utilisateur
username (VARCHAR) : nom d’utilisateur
email (VARCHAR): email de l’utilisateur
password (VARCHAR) : mot de passe
role (INT) : role de l’utilisateur (utilisateur, organisateur, administrateur)

Spectacle2User
id_user (INT PK FK) : identifiant de l’utilisateur
id_spectacle(INT PK FK) : Identifiant unique du spectacle.

Question 2 et 3 :

Lieu
Dépendances fonctionnelles :
nom_lieu → adresse, places_assises, places_debout
Clé minimale : nom_lieu
Justification : Le nom du lieu identifie de manière unique chaque enregistrement et détermine ses autres attributs comme l’adresse, les places assises et debout. Les images seront stockées dans la table ImageLieu associée.

Soiree
Dépendances fonctionnelles :
id_soiree → nom_soiree, thematique, date, heure_debut, lieu
Clé minimale : id_soiree
Justification : L’identifiant unique id_soiree permet d’identifier chaque soirée sans ambiguïté et de déterminer ses autres caractéristiques telles que le nom, la thématique, la date, l’heure de début et le lieu associé.

Spectacle
Dépendances fonctionnelles :
id_spectacle → titre, description, video_url, horaire_previsionnel, id_soiree
Clé minimale : id_spectacle
Justification : L’identifiant id_spectacle permet de reconnaître chaque spectacle et de déduire ses informations telles que le titre, la description, l’URL vidéo, l’horaire prévisionnel et la soirée à laquelle il est associé. Les images des spectacles sont externalisées dans la table ImageSpectacle et les artistes associés dans SpectacleArtiste.

Artiste
Dépendances fonctionnelles :
id_artiste → nom_artiste, bio
Clé minimale : id_artiste
Justification : id_artiste identifie chaque artiste de manière unique, permettant d'accéder aux informations comme le nom et la biographie.

SpectacleArtiste
Dépendances fonctionnelles :
(id_spectacle, id_artiste) → Association unique d’un artiste avec un spectacle.
Clé minimale : (id_spectacle, id_artiste) (clé composite)
Justification : La combinaison id_spectacle et id_artiste est unique et permet de gérer les associations sans redondance. Un artiste peut participer à plusieurs spectacles, et chaque spectacle peut inclure plusieurs artistes.

ImageLieu
Dépendances fonctionnelles :
url → nom_image, nom_lieu
Clé minimale : url
Justification : L’URL de chaque image est unique et permet de référencer les détails de l’image et son lieu associé.

ImageSpectacle
Dépendances fonctionnelles :
url → nom_image, id_spectacle
Clé minimale : url
Justification : L’URL de chaque image est unique et permet de référencer les détails de l’image et le spectacle auquel elle est associée.

Users
Dépendances fonctionnelles :
id_user → username, email, password, role
Clé minimale : id_user
Justification :  id_user est l'identifiant unique pour chaque utilisateur. Il permet d'identifier sans ambiguïté chaque utilisateur et d'accéder à toutes ses informations associées telles que le nom d'utilisateur (username), l'adresse email (email), le mot de passe (password) et son rôle (role). Les colonnes username et email sont également uniques mais ne suffisent pas à elles seules pour identifier complètement chaque utilisateur (par exemple, en cas de modification).

Spectacle2User
Dépendances fonctionnelles :
(id_user, id_spectacle) → Association unique d’un utilisateur avec un spectacle
Clé minimale : (id_user, id_spectacle) clé composite
Justification : La combinaison de id_user et id_spectacle est unique et permet d'identifier chaque association entre un utilisateur et un spectacle. Ce schéma garantit qu’un même utilisateur peut être associé à plusieurs spectacles et qu’un spectacle peut être lié à plusieurs utilisateurs. Cette clé composite est nécessaire pour gérer ces associations sans redondance.

Question 4 et 5
Pour être en 3NF, chaque relation doit être en 2NF et ne contenir aucune dépendance transitive (c'est-à-dire qu'aucun attribut ne doit dépendre indirectement de la clé primaire).

Table Lieu
Attributs : nom_lieu, adresse, places_assises, places_debout 
1NF :
Les attributs sont atomiques, donc la table est en 1NF.
2NF :
La clé primaire nom_lieu détermine chaque autre attribut (adresse, places_assises, places_debout) sans dépendances partielles. Donc, la table est en 2NF.
3NF :
Aucun attribut ne dépend indirectement de la clé primaire. La table Lieu est donc en 3NF.

Table Soiree
Attributs : id_soiree, nom_soiree, thematique, date, heure_debut, lieu 
1NF :
Tous les attributs sont atomiques, donc la table est en 1NF.
2NF :
La clé primaire id_soiree détermine chaque autre attribut sans dépendance partielle. Elle est donc en 2NF.
3NF :
Aucune dépendance transitive n'existe. La table Soiree est en 3NF.

Table Spectacle
Attributs : id_spectacle, titre, description, video_url, horaire_previsionnel, id_soiree 
1NF :
Les champs sont atomiques. Les images sont déplacées dans une table externe ImageSpectacle et les artistes dans SpectacleArtiste, donc elle respecte la 1NF.
2NF :
id_spectacle détermine chaque autre attribut, sans dépendance partielle. La table est en 2NF.
3NF :
Aucune dépendance transitive. La table Spectacle est en 3NF.

Table Artiste
Attributs : id_artiste, nom_artiste, bio 
1NF :
Les attributs sont atomiques et indépendants.
2NF :
id_artiste détermine les autres attributs, sans dépendance partielle.
3NF :
Aucune dépendance transitive. La table Artiste est donc en 3NF.

Table SpectacleArtiste
Attributs : id_spectacle, id_artiste 
1NF :
Les attributs sont atomiques.
2NF :
La clé primaire composite (id_spectacle, id_artiste) détermine chaque ligne unique, donc la table est en 2NF.
3NF :
Pas de dépendance transitive. La table SpectacleArtiste est en 3NF.

Table ImageLieu
Attributs : url, nom_image, nom_lieu 
1NF :
Les attributs sont atomiques.
2NF :
La clé primaire url détermine les autres attributs, donc la table est en 2NF.
3NF :
Pas de dépendances transitives. La table ImageLieu est en 3NF.

Table ImageSpectacle
Attributs : url, nom_image, id_spectacle 
1NF :
Les attributs sont atomiques.
2NF :
La clé primaire url détermine chaque autre attribut sans dépendance partielle.
3NF :
Pas de dépendance transitive. La table ImageSpectacle est en 3NF.

Table Users
Attributs : id_user, username, email, password, role 
1NF :
Les attributs sont atomiques.
2NF :
La clé primaire id_user détermine chaque autre attribut sans dépendance partielle.
3NF :
Pas de dépendance transitive. La table Users est en 3NF.

Table Spectacle2User
Attributs : id_user, id_spectacle
1NF :
Les attributs sont atomiques.
2NF :
La clé primaire composé de id_user et id_spectacle détermine chaque autre attribut sans dépendance partielle.
3NF :
Pas de dépendance transitive. La table Spectacle2User est en 3NF.


Question 6 :
voir BD_SAE_BLONBOU_LOUNICI_CHAILAN_HAUTION.sql